name: ci

on:
  push:
    branches: [ "main" ]
    paths:
      - .github/workflows/ci.yml
      - cmd/**
      - config/**
      - internal/**
      - test/**
      - vendor/**
      - .golangci.yml
      - Dockerfile
      - Makefile
      - go.mod
      - go.sum
  pull_request:
    branches: [ "main" ]
    paths:
      - .github/workflows/ci.yml
      - cmd/**
      - config/**
      - internal/**
      - test/**
      - vendor/**
      - .golangci.yml
      - Dockerfile
      - Makefile
      - go.mod
      - go.sum

jobs:
  go:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: read go version from go.mod
        run: |
          # prints the go version for use in setup go
          echo "GO_VERSION=$(awk 'NR==3 {print $2}' go.mod)" >> $GITHUB_ENV

      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: unit test
        run: make test

      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v6.1.0


  container:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: set up QEMU
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/setup-qemu-action@v3

        # needed for build caching
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push container image
        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ghcr.io/cyclingwithelephants/cloudflare-gateway-controller:latest
          platforms: ${{ github.ref == 'refs/heads/main' && 'linux/amd64,linux/arm64' || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup kind cluster
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: kind

      - name: e2e test
        run: |
          make test-e2e

  generated-files:
    name: generated files
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - run: make manifests

      - name: check for diff
        run: |
            if ! git diff --quiet; then
              git diff
              exit 1
            else
              echo "no diff detected."
            fi

  conformance-tests:
    name: Gateway Conformance Tests
    runs-on: ubuntu-22.04
    if: ${{ github.ref_type != 'tag' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Setup Golang Environment
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: go.mod

      - name: Docker Buildx
        uses: docker/setup-buildx-action@16c0bc4a6e6ada2cfd8afd41d22d95379cf7c32a # v2.8.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4.6.0
        with:
          images: |
            name=ghcr.io/nginxinc/nginx-kubernetes-gateway
          tags: |
            type=semver,pattern={{version}}
            type=edge
            type=ref,event=pr
            type=ref,event=branch,suffix=-rc,enable=${{ startsWith(github.ref, 'refs/heads/release') }}

      - name: Prepare NKG files
        run: |
          nkg_prefix=$(echo ${{ steps.meta.outputs.tags }} | cut -d ":" -f 1)
          nkg_tag=$(echo ${{ steps.meta.outputs.tags }} | cut -d ":" -f 2)
          make update-nkg-manifest NKG_PREFIX=${nkg_prefix} NKG_TAG=${nkg_tag}
        working-directory: ./conformance

      - name: Build binary
        uses: goreleaser/goreleaser-action@336e29918d653399e599bfca99fadc1d7ffbc9f7 # v4.3.0
        with:
          version: latest
          args: ${{ startsWith(github.ref, 'refs/tags/') && 'release' || 'build --snapshot' }} --clean
        env:
          GOPATH: ${{ needs.vars.outputs.go_path }}

      - name: Build Docker Image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          file: build/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          context: "."
          target: goreleaser
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true

      - name: Build Test Docker Image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          file: conformance/tests/Dockerfile
          tags: conformance-test-runner:${{ github.sha }}
          context: "."
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true

      - name: Deploy Kubernetes
        id: k8s
        run: |
          make create-kind-cluster KIND_KUBE_CONFIG=kube-${{ github.run_id }}
          echo "KUBECONFIG=kube-${{ github.run_id }}" >> "$GITHUB_ENV"
        working-directory: ./conformance

      - name: Setup conformance tests
        run: |
          nkg_prefix=$(echo ${{ steps.meta.outputs.tags }} | cut -d ":" -f 1)
          nkg_tag=$(echo ${{ steps.meta.outputs.tags }} | cut -d ":" -f 2)
          make install-nkg-local-no-build NKG_PREFIX=${nkg_prefix} NKG_TAG=${nkg_tag}
        working-directory: ./conformance

      - name: Run conformance tests
        run: |
          make run-conformance-tests TAG=${{ github.sha }}
        working-directory: ./conformance
        continue-on-error: true
