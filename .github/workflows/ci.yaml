name: ci

on:
  push:
    branches: [ "main" ]
    paths:
      - .github/workflows/ci.yml
      - cmd/**
      - config/**
      - internal/**
      - test/**
      - vendor/**
      - .golangci.yml
      - Dockerfile
      - Makefile
      - go.mod
      - go.sum
  pull_request:
    branches: [ "main" ]
    paths:
      - .github/workflows/ci.yml
      - cmd/**
      - config/**
      - internal/**
      - test/**
      - vendor/**
      - .golangci.yml
      - Dockerfile
      - Makefile
      - go.mod
      - go.sum

jobs:
  go:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: read go version from go.mod
        run: |
          # prints the go version for use in setup go
          echo "GO_VERSION=$(awk 'NR==3 {print $2}' go.mod)" >> $GITHUB_ENV

      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: unit test
        run: make test

      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v6.1.1


  container:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: set up QEMU
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/setup-qemu-action@v3

        # needed for build caching
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push container image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ghcr.io/cyclingwithelephants/cloudflare-gateway-controller:latest
          platforms: ${{ github.ref == 'refs/heads/main' && 'linux/amd64,linux/arm64' || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup kind cluster
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: kind

      - name: e2e test
        run: |
          make test-e2e

  generated-files:
    name: generated files
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - run: make manifests

      - name: check for diff
        run: |
            if ! git diff --quiet; then
              git diff
              exit 1
            else
              echo "no diff detected."
            fi

  conformance:
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: test/conformance
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: set up docker buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v2.8.0

      - name: setup kind cluster
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: conformance

      - name: build app
        working-directory: ${{ env.WORKING_DIRECTORY}}
        run: |
          make build-app

      - name: build test runner
        working-directory: ${{ env.WORKING_DIRECTORY}}
        run: |
          make build-test-runner

      - name: deploy app
        working-directory: ${{ env.WORKING_DIRECTORY}}
        run: |
          make deploy-app

      - name: Run conformance tests
        working-directory: ${{ env.WORKING_DIRECTORY}}
        continue-on-error: true
        run: |
          make run-conformance-tests
